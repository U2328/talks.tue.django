# Generated by Django 2.0.13 on 2019-03-30 10:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import markdownx.models
import talks_tue.core.models
import talks_tue.revisions.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('title', models.CharField(max_length=32, verbose_name='Title')),
                ('description', markdownx.models.MarkdownxField(max_length=512, verbose_name='Description')),
                ('is_meta', models.BooleanField(default=False, verbose_name='Is metacollection?')),
                ('collection_id', models.IntegerField(default=talks_tue.core.models._get_next_collection_id, primary_key=True, serialize=False)),
                ('editors', models.ManyToManyField(blank=True, related_name='edited_collections', to=settings.AUTH_USER_MODEL, verbose_name='Editors')),
            ],
            options={
                'verbose_name': 'collection',
                'verbose_name_plural': 'collections',
            },
            bases=(talks_tue.revisions.utils.HasRevision, models.Model),
        ),
        migrations.CreateModel(
            name='MetaCollection',
            fields=[
                ('title', models.CharField(max_length=32, verbose_name='Title')),
                ('description', markdownx.models.MarkdownxField(max_length=512, verbose_name='Description')),
                ('is_meta', models.BooleanField(default=False, verbose_name='Is metacollection?')),
                ('collection_id', models.IntegerField(default=talks_tue.core.models._get_next_collection_id, primary_key=True, serialize=False)),
                ('editors', models.ManyToManyField(blank=True, related_name='edited_metacollections', to=settings.AUTH_USER_MODEL, verbose_name='Editors')),
                ('meta_collections', models.ManyToManyField(blank=True, related_name='sub_metacollections', to='core.MetaCollection', verbose_name='Metacollections')),
                ('organizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_metacollections', to=settings.AUTH_USER_MODEL, verbose_name='Oragnizer')),
            ],
            options={
                'verbose_name': 'meta collection',
                'verbose_name_plural': 'meta collections',
            },
            bases=(talks_tue.revisions.utils.HasRevision, models.Model),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Talk title')),
                ('description', markdownx.models.MarkdownxField(max_length=512, verbose_name='Talk description')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Talk date')),
                ('name', models.CharField(max_length=128, verbose_name="Speaker's name")),
                ('about_me', markdownx.models.MarkdownxField(max_length=512, verbose_name="Speaker's about me")),
                ('collections', models.ManyToManyField(blank=True, related_name='collected_talks', to='core.Collection', verbose_name='Collections')),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_talk', to='core.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'talk',
                'verbose_name_plural': 'talks',
            },
            bases=(talks_tue.revisions.utils.HasRevision, models.Model),
        ),
        migrations.AddField(
            model_name='collection',
            name='meta_collections',
            field=models.ManyToManyField(blank=True, related_name='sub_collections', to='core.MetaCollection', verbose_name='Metacollections'),
        ),
        migrations.AddField(
            model_name='collection',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_collections', to=settings.AUTH_USER_MODEL, verbose_name='Oragnizer'),
        ),
    ]
